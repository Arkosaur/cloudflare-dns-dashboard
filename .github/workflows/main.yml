# .github/workflows/main.yml

name: Build and Push Docker Image to GHCR

# 优化 1: 增加更丰富的触发器
on:
  push:
    branches:
      - 'main'   # 在 main 分支推送时触发
      - 'master' # 也兼容 master 分支
    tags:
      - 'v*.*.*' # 在推送版本标签时（如 v1.0.0）触发，用于发布
  pull_request:
    branches:
      - 'main'
      - 'master'

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    # 优化 2: 正确设置权限，为 GITHUB_TOKEN 授权
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout repository
      # 优化 3: 使用最新的 Action 版本
      uses: actions/checkout@v4

    # 优化 4: 自动提取元数据（标签和标注）
    # 这个 Action 会根据 Git 事件自动生成更智能的 Docker 标签
    - name: Extract Docker metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ghcr.io/${{ github.repository }}

    # 优化 5: 使用 GITHUB_TOKEN 安全登录
    # 不再需要 GH_PAT，这是最重要和最安全的改动
    - name: Log in to the GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    # (推荐) 设置 Buildx，以使用缓存等高级功能
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    # 优化 6: 构建和推送，并启用缓存和智能标签
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        # 仅在非 pull_request 事件中推送镜像，PR中只构建用于检查
        push: ${{ github.event_name != 'pull_request' }}
        # 使用 metadata-action 自动生成的标签，取代写死的 'latest'
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        # 启用 BuildKit 缓存，极大地提升后续构建速度
        cache-from: type=gha
        cache-to: type=gha,mode=max
